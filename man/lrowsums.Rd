% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.r
\name{lrowsums}
\alias{lrowsums}
\title{Single-dimension log-sums of an array-like object}
\usage{
lrowsums(x, dim = 1, na.rm = FALSE, drop. = FALSE)
}
\arguments{
\item{x}{vector, matrix of array of numbers to be summed.}

\item{dim}{integer specifying which dimension of \code{x} to take the sum 
over: \code{dim = 1} to sum values stored in columns, \code{dim = 2} to sum 
values stored in rows, etc. Ignored if \code{x} is a vector.}

\item{na.rm}{logical, irgnore NAs?}

\item{drop.}{logical, remove any dimensions of size 1 after summing?}
}
\value{
An array-like object containing the log-sums of \code{x} taken over 
dimension \code{dim}. That is, if \code{y} is a vector stored across 
dimension \code{dim} of \code{x}, the value \code{log(sum(exp(y)))} is 
computed. See the examples for more explanation.
}
\description{
Given a vector, matrix or array of numeric values in the log domain, compute 
the sum of values on the linear domain across each row/column/higher 
dimension without risk of underflow.
}
\details{
It is often useful in statistical computations to store probabilities on a 
logarithmic scale. However, when a sum of probabilities is required, 
performing the inverse log transformation before adding can result in 
numerical underflow, i.e. nonzero values are rounded to zero.

This function computes these sums accurately by taking precaution against 
underflow, and does so in a vectorised manner for multidimensional objects.
}
\examples{
x <- log(array(1:24, dim = c(3,4,2)))
# This
lrowsums(x, 1)
# is equivalent to
log(apply(exp(x), 2:3, sum))
# And this
lrowsums(x, 3)
# is equivalent to
log(apply(exp(x), 1:2, sum))
}
\seealso{
\code{rowsum}, \code{rowSums}
}
